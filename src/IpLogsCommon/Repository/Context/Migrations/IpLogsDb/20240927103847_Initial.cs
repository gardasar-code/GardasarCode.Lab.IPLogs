#nullable disable

using System.Globalization;
using Microsoft.EntityFrameworkCore.Migrations;

namespace IpLogsCommon.Repository.Context.Migrations.IpLogsDb;

/// <inheritdoc />
public partial class Initial : Migration
{
    /// <inheritdoc />
    protected override void Up(MigrationBuilder migrationBuilder)
    {
        migrationBuilder.CreateTable(
            "Users",
            table => new
            {
                Id = table.Column<long>("bigint", nullable: false),
                IPAddress = table.Column<string>("VARCHAR(45)", nullable: false),
                LastConnectionTime = table.Column<DateTime>("timestamp with time zone", nullable: false)
            },
            constraints: table => { table.PrimaryKey("PK_Users", x => x.Id); });

        migrationBuilder.Sql(@"
                CREATE TABLE ""UserIPs"" (
                ""Id"" BIGINT GENERATED BY DEFAULT AS IDENTITY,
                ""UserId"" BIGINT NOT NULL,
                ""IPAddress"" VARCHAR(45) NOT NULL,
                ""ConnectionTime"" TIMESTAMP WITH TIME ZONE NOT NULL,
                CONSTRAINT ""FK_UserIPs_Users_UserId"" FOREIGN KEY (""UserId"") REFERENCES ""Users""(""Id""),
                PRIMARY KEY (""Id"", ""UserId"", ""ConnectionTime"")
                ) PARTITION BY RANGE (""ConnectionTime"");
        ");

        CreateMonthlyPartitionsWithHash(migrationBuilder,
            DateTime.UtcNow.AddYears(-1).Year.ToString(CultureInfo.InvariantCulture));
        CreateMonthlyPartitionsWithHash(migrationBuilder, DateTime.UtcNow.Year.ToString(CultureInfo.InvariantCulture));
        CreateMonthlyPartitionsWithHash(migrationBuilder,
            DateTime.UtcNow.AddYears(1).Year.ToString(CultureInfo.InvariantCulture));

        migrationBuilder.CreateIndex(
            "IX_UserIPs_UserId",
            "UserIPs",
            "UserId");

        migrationBuilder.Sql(@"
            CREATE EXTENSION IF NOT EXISTS pg_trgm;
            CREATE INDEX idx_ip_trgm ON ""UserIPs"" USING gin (""IPAddress"" gin_trgm_ops);
        ");

        migrationBuilder.Sql(@"
            CREATE OR REPLACE FUNCTION insert_update_userips()
            RETURNS TRIGGER AS $$
            BEGIN
                INSERT INTO ""UserIPs"" (""UserId"", ""IPAddress"", ""ConnectionTime"")
                VALUES (NEW.""Id"", NEW.""IPAddress"", NEW.""LastConnectionTime"");
                RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;
        ");

        migrationBuilder.Sql(@"
            CREATE TRIGGER trigger_after_insert_user
            AFTER INSERT OR UPDATE ON ""Users""
            FOR EACH ROW
            EXECUTE FUNCTION insert_update_userips();
        ");
    }

    /// <inheritdoc />
    protected override void Down(MigrationBuilder migrationBuilder)
    {
        migrationBuilder.DropTable(
            "UserIPs");

        migrationBuilder.DropTable(
            "Users");
    }

    private void CreateMonthlyPartitionsWithHash(MigrationBuilder migrationBuilder, string year)
    {
        for (var month = 1; month <= 12; month++)
        {
            var monthStr = month.ToString("D2");
            var partitionName = $"UserIPs_{year}_{monthStr}";
            var startDate = $"{year}-{monthStr}-01";
            var endDate = month == 12 ? $"{int.Parse(year) + 1}-01-01" : $"{year}-{month + 1:D2}-01";

            migrationBuilder.Sql($@"
                CREATE TABLE ""{partitionName}"" PARTITION OF ""UserIPs""
                FOR VALUES FROM ('{startDate}') TO ('{endDate}')
                PARTITION BY HASH (""UserId"");

                CREATE TABLE ""{partitionName}_p0"" PARTITION OF ""{partitionName}"" FOR VALUES WITH (MODULUS 5, REMAINDER 0);
                CREATE TABLE ""{partitionName}_p1"" PARTITION OF ""{partitionName}"" FOR VALUES WITH (MODULUS 5, REMAINDER 1);
                CREATE TABLE ""{partitionName}_p2"" PARTITION OF ""{partitionName}"" FOR VALUES WITH (MODULUS 5, REMAINDER 2);
                CREATE TABLE ""{partitionName}_p3"" PARTITION OF ""{partitionName}"" FOR VALUES WITH (MODULUS 5, REMAINDER 3);
                CREATE TABLE ""{partitionName}_p4"" PARTITION OF ""{partitionName}"" FOR VALUES WITH (MODULUS 5, REMAINDER 4);
            ");
        }
    }
}